<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
     namespace：mapper配置的命名空间，扫描的是mapper接口
     查询：select标签
        id：mapper接口中方法的名称
        resultType:mapper接口中方法的返回值类型，选择是最终类型
     添加：insert标签
     修改：update标签
     删除：delete标签
-->
<mapper namespace="com.gyr.ssmemployees.mapper.EmployeeMapper">
    <!--查询员工列表的信息-->
    <select id="getEmployeesList" resultType="com.gyr.ssmemployees.pojo.Employee">
        SELECT id,lastName,email,gender,jobId FROM employee
    </select>
    <!--根据在职状态查询员工列表的信息-->
    <select id="getEmployeesByJob" resultType="com.gyr.ssmemployees.pojo.Employee" parameterType="java.lang.String">
        SELECT id,lastName,email,gender,jobId FROM employee WHERE jobId=#{jobId}
        /*如果jobId=0时查询到是在职状态*/
        <if test="jobId != null and '0' == jobId">
            and jobId='0'
        </if>
        /*如果jobId=1时查询到是离职状态*/
        <if test="jobId != null and '1'==jobId">
            and jobId='1'
        </if>
    </select>
    <!--添加员工的信息-->
    <insert id="insertEmployee" parameterType="com.gyr.ssmemployees.pojo.Employee">
        INSERT  INTO employee(lastName,email,gender,jobId )VALUES (#{lastName},#{email},#{gender},#{jobId})
    </insert>
    <!--根据员工的ID查询员工的信息-->
    <select id="getEmployeeById" parameterType="java.lang.Integer" resultType="com.gyr.ssmemployees.pojo.Employee">
        SELECT id,lastName,email,gender,jobId FROM employee WHERE id=#{id}
    </select>
    <!--修改员工的信息-->
    <update id="updateEmployee" parameterType="com.gyr.ssmemployees.pojo.Employee">
        UPDATE employee SET lastName=#{lastName},email=#{email},gender=#{gender},jobId=#{jobId} WHERE id=#{id}
    </update>
    <!--根据ID删除员工的信息-->
    <delete id="deleteEmployeeById" parameterType="java.lang.Integer">
        DELETE  FROM employee WHERE id=#{id}
    </delete>
    <!--批量删除员工-->
    <delete id="deleteEmployees" parameterType="list">
        DELETE FROM employee WHERE id IN
        <foreach item="id" index="index" collection="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>